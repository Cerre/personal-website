@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 220 20% 10%;
    --foreground: 210 20% 98%;

    --card: 220 20% 13%;
    --card-foreground: 210 20% 98%;

    --popover: 220 20% 13%;
    --popover-foreground: 210 20% 98%;

    --primary: 142 70% 50%;
    --primary-foreground: 220 20% 10%;

    --secondary: 160 50% 20%;
    --secondary-foreground: 210 20% 98%;

    --muted: 220 20% 20%;
    --muted-foreground: 215 20% 65%;

    --accent: 160 50% 20%;
    --accent-foreground: 210 20% 98%;

    --destructive: 0 62% 30%;
    --destructive-foreground: 210 20% 98%;

    --border: 220 20% 20%;
    --input: 220 20% 20%;
    --ring: 142 70% 50%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 220 20% 10%;
    --foreground: 210 20% 98%;

    --card: 220 20% 13%;
    --card-foreground: 210 20% 98%;

    --popover: 220 20% 13%;
    --popover-foreground: 210 20% 98%;

    --primary: 142 70% 50%;
    --primary-foreground: 220 20% 10%;

    --secondary: 160 50% 20%;
    --secondary-foreground: 210 20% 98%;

    --muted: 220 20% 20%;
    --muted-foreground: 215 20% 65%;

    --accent: 160 50% 20%;
    --accent-foreground: 210 20% 98%;

    --destructive: 0 62% 30%;
    --destructive-foreground: 210 20% 98%;

    --border: 220 20% 20%;
    --input: 220 20% 20%;
    --ring: 142 70% 50%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

.prose {
  @apply max-w-none;
}

.prose p {
  @apply mb-4 text-muted-foreground;
}

.prose-green {
  @apply prose-a:text-primary prose-a:no-underline hover:prose-a:text-primary/80;
}

/* Chess component specific styles */
.chess-dialog {
  z-index: 100;
}

/* Chess piece dragging styles */
.chess-piece-dragging {
  z-index: 1100 !important;
  pointer-events: none !important;
}

/* Make sure drag layer has proper z-index */
[data-square] {
  position: relative;
  z-index: 1;
}

/* Chess board container */
[data-boardid] {
  position: relative !important;
  overflow: visible !important;
}

/* Ensure pieces are visible during drag */
[data-piece] {
  will-change: transform;
  transition: transform 0.3s cubic-bezier(0.2, 0.8, 0.2, 1);
}

/* Custom styles for Chess Puzzle */
.chessboard-container {
  position: relative; /* Establish stacking context */
}

/* Target pieces within react-chessboard, assuming they might have a structure like this */
/* Adjust selector if needed based on actual rendered output */
.chessboard-container > div[data-boardid] > div[class*="piece-"] {
  z-index: 10; /* Try forcing pieces above squares */
}

/* You might need to inspect the actual rendered HTML by react-chessboard */
/* and adjust the selector above to accurately target the piece elements. */
/* Common patterns might involve classes like .piece, .wp, .bn, etc. */
/* or data attributes. */

